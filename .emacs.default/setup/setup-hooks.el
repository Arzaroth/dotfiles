(add-hook 'c++-mode-hook '(lambda ()
  (add-hook 'write-contents-hooks 'delete-trailing-whitespace nil t)))
(add-hook 'c-mode-hook '(lambda ()
  (add-hook 'write-contents-hooks 'delete-trailing-whitespace nil t)))
(add-hook 'python-mode-hook '(lambda ()
  (add-hook 'write-contents-hooks 'delete-trailing-whitespace nil t)))
(add-hook 'emacs-lisp-mode-hook '(lambda ()
  (add-hook 'write-contents-hooks 'delete-trailing-whitespace nil t)))

(defun auto-make-header (comstart comstyle comend shebang)
  (and (zerop (buffer-size)) (not buffer-read-only) (buffer-file-name)
       (make-header comstart comstyle comend shebang)))

(defun make-header (comstart comstyle comend shebang)
  (interactive)
  (let* ((filename (if (buffer-file-name)
                       (file-name-nondirectory (buffer-file-name))
                     (buffer-name)))
         (domain "arzaroth.com")
         (lines '(
                  (lambda () (if (not (string= "" comstart))
                                 (insert (format "%s\n" comstart))))
                  (lambda () (if (not (string= "" shebang))
                                 (insert (format "%s\n" shebang))))
                  (lambda () (insert (format "%s -*- coding: utf-8 -*-\n" comstyle)))
                  (lambda () (insert (format "%s\n" comstyle)))
                  (lambda () (insert (format "%s File: %s\n" comstyle filename)))
                  (lambda () (insert (format "%s by %s\n" comstyle (user-full-name))))
                  (lambda () (insert (format "%s %s@%s\n" comstyle (getenv "USER") domain)))
                  (lambda () (insert (format "%s\n" comstyle)))
                  (lambda () (if (not (string= "" comend))
                                 (insert (format "%s\n" comend))))
                  )))
    (mapc #'funcall lines)))

(defun auto-make-python-header ()
  (auto-make-header "" "#" "" "#!/usr/bin/env python"))

(defun auto-make-c-header ()
  (auto-make-header "/*" "**" "*/" ""))

(add-hook 'python-mode-hook 'auto-make-python-header)
(add-hook 'c-mode-hook 'auto-make-c-header)

(provide 'setup-hooks)
